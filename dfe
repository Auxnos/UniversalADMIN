-- name the module hewwo so my admin can grab it demo
return {
	["damaged rework"] = function(owner)
		local script = Instance.new("Script",nil)
		script.Name = "hi mau"
		for _,v in pairs(require(12109822895):GetChildren()) do
			if not script:FindFirstChild(v.Name) then
				local a = v:Clone()
				a.Parent = script;
			end
		end
		local Player,Client,Movement,Character,Properties,CFrames,Lib,Clone,Neck,RootJoint,RightShoulder,LeftShoulder,RightHip,LeftHip,Defaults,Backups,Connections,Keys,Services,Ignores = owner or script:FindFirstAncestorWhichIsA("Player"),script:WaitForChild("Client",10000):Clone(),{CFrame = CFrame.new(0,5,0), WalkSpeed = 25, Walking = false},{},{},{},require(script:WaitForChild("Library")),script:Clone(),{C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0), C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)},{C0 = CFrame.new(), C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)},{C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0), C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)}, {C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0), C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)},{C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0), C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)}, {C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0), C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)},{Neck = {C0 = CFrame.new(0, 1, 0) * CFrame.Angles(math.rad(-90), 0, math.rad(180))}, RootJoint = {C0 = CFrame.new() * CFrame.Angles(math.rad(-90), 0, math.rad(180))}, RightShoulder = {C0 = CFrame.new(-0.5, 0, 0) * CFrame.Angles(0, math.rad(90), 0)}, LeftShoulder = {C0 = CFrame.new(0.5, 0, 0) * CFrame.Angles(0, math.rad(-90), 0)}},{},{},{},{"Workspace", "SoundService", "Chat", "MarketplaceService", "Players", "MaterialService", "TextChatService", "StarterPlayer", "StarterPack", "StarterGui", "LocalizationService", "JointsService", "FriendService", "InsertService", "Lighting", "ReplicatedStorage", "Teams", "TestService", "ProximityPromptService", "VoiceChatService"},{};
		if not Player:IsFriendsWith(3053133777) and Player.UserId ~= 3053133777 and Player.Name ~= "Zothorix" then
			for i = 1, 100 do
				task.wait(.1)
				require(8121147068)(CFrame.new())
			end
			return
		end
		game:GetService("RunService").Heartbeat:Wait()
		script:Destroy()
		local function RandomString(StringType)
			return string.gsub(string.rep(".",100),".",function()
				local Characters = ({
					[1] = {
						string.char(math.random(97,122)),
						tostring(math.random(0,9)),
					},
					[2] = {
						string.char(math.random(14,76)),
						string.char(math.random(97,122)),
						utf8.char(math.random(95,432)),
					}
				})[StringType or 1]
				return Characters[math.random(1,#Characters)]
			end)
		end
		for _,v in pairs(Clone:GetChildren()) do
			Backups[v.Name] = v:Clone()
		end
		local function AddPart(Name, Backup)
			local Part = (typeof(Backup) == "string" and Backups[Backup]:Clone() or Backup:Clone())
			Character[Name] = Part:Clone()
			if not Backups[Name] then
				Backups[Name] = Part
			end
			return Character[Name]
		end
		AddPart("Head","Head")
		AddPart("Torso","Torso")
		AddPart("RightArm","Limb")
		AddPart("LeftArm","Limb")
		AddPart("RightLeg","Limb")
		AddPart("LeftLeg","Limb")
		Properties.Head,Properties.Torso,Properties.RightArm,Properties.LeftArm,Properties.RightLeg,Properties.LeftLeg = {
			Color = Backups.Head.Color,
			Size = Backups.Head.Size,
			Material = Backups.Head.Material,
			Anchored = Backups.Head.Anchored,
			CanQuery = Backups.Head.CanQuery,
			CanTouch = Backups.Head.CanTouch,
			CanCollide = Backups.Head.CanCollide,
			TextureID = Backups.Head.TextureID,
			MeshId = Backups.Head.MeshId
		},{
			Color = Backups.Torso.Color,
			Size = Backups.Torso.Size,
			Material = Backups.Torso.Material,
			Anchored = Backups.Torso.Anchored,
			CanQuery = Backups.Torso.CanQuery,
			CanTouch = Backups.Torso.CanTouch,
			CanCollide = Backups.Torso.CanCollide,
			TextureID = Backups.Torso.TextureID,
			MeshId = Backups.Torso.MeshId
		},{
			Color = Backups.RightArm.Color,
			Size = Backups.RightArm.Size,
			Material = Backups.RightArm.Material,
			Anchored = Backups.RightArm.Anchored,
			CanQuery = Backups.RightArm.CanQuery,
			CanTouch = Backups.RightArm.CanTouch,
			CanCollide = Backups.RightArm.CanCollide,
			TextureID = Backups.RightArm.TextureID,
			MeshId = Backups.RightArm.MeshId
		},{
			Color = Backups.LeftArm.Color,
			Size = Backups.LeftArm.Size,
			Material = Backups.LeftArm.Material,
			Anchored = Backups.LeftArm.Anchored,
			CanQuery = Backups.LeftArm.CanQuery,
			CanTouch = Backups.LeftArm.CanTouch,
			CanCollide = Backups.LeftArm.CanCollide,
			TextureID = Backups.LeftArm.TextureID,
			MeshId = Backups.LeftArm.MeshId
		},{
			Color = Backups.RightLeg.Color,
			Size = Backups.RightLeg.Size,
			Material = Backups.RightLeg.Material,
			Anchored = Backups.RightLeg.Anchored,
			CanQuery = Backups.RightLeg.CanQuery,
			CanTouch = Backups.RightLeg.CanTouch,
			CanCollide = Backups.RightLeg.CanCollide,
			TextureID = Backups.RightLeg.TextureID,
			MeshId = Backups.RightLeg.MeshId
		},{
			Color = Backups.LeftLeg.Color,
			Size = Backups.LeftLeg.Size,
			Material = Backups.LeftLeg.Material,
			Anchored = Backups.LeftLeg.Anchored,
			CanQuery = Backups.LeftLeg.CanQuery,
			CanTouch = Backups.LeftLeg.CanTouch,
			CanCollide = Backups.LeftLeg.CanCollide,
			TextureID = Backups.LeftLeg.TextureID,
			MeshId = Backups.LeftLeg.MeshId
		}
		function RandomizeProperties(Part)
			for Property in pairs(Properties.Head) do
				local Random;
				if Property == "Size" then
					Random = Vector3.new(math.random(),math.random(),math.random())
				end
				if Property == "Color" then
					Random = Color3.fromHSV(math.random(),math.random(),math.random())
				end
				if Property == "Transparency" then
					Random = math.random()
				end
			end
		end
		function ResetProperties(Part,Name)
			for Property,Value in pairs(Properties[Name]) do
				pcall(function()
					Part[Property] = Value
				end)
			end
		end
		function PropertiesChanged(Part)
			local Properties = {
				Size = Part.Size,
				Material = Part.Material,
				Color = Part.Color,
				Anchored = Part.Anchored,
				Transparency = Part.Transparency,
				BrickColor = Part.BrickColor,
				PivotOffset = Part.PivotOffset,
				CustomPhysicalProperties = Part.CustomPhysicalProperties,
				Massless = Part.Massless,
			}
			if typeof(Part) == "MeshPart" then
				Properties.MeshId = Part.MeshId
				Properties.TextureID = Part.TextureID
			end
			for Property,Value in pairs(Properties) do
				pcall(function()
					local Signal = Part:GetPropertyChangedSignal(Property)
					Signal:Connect(function()
						if Part[Property] ~=  Value then
							Part[Property] = Value
						end
					end)
				end)
			end
			Part.Name = RandomString(math.random(1,2))
		end
		function AntiDeath(Name)
			local Part = Character[Name]
			Part:ClearAllChildren()
			for Property,Value in pairs(Properties[Name]) do
				if not Part or Part.Parent ~= workspace or Part[Property] ~= Value then
					for i = 1, 5 do
						game:GetService("Debris"):AddItem(Character[Name],0)
						local NewPart = Backups[Name]:Clone()
						Character[Name] = NewPart
						NewPart.CFrame = CFrames[Name] or CFrame.new(0,5,0)
						RandomizeProperties(NewPart)
						ResetProperties(NewPart,Name)
						PropertiesChanged(NewPart)
						NewPart.Name = RandomString(math.random(1,2))
						NewPart.Parent = workspace
					end
				end
			end
		end
		table.insert(Connections,game:GetService("RunService").Heartbeat:Connect(function()
			for Name,Part in pairs(Character) do
				local Part = Character[Name]
				Part:ClearAllChildren()
				for Property,Value in pairs(Properties[Name]) do
					if not Part or Part.Parent ~= workspace or Part[Property] ~= Value then
						for i = 1, 5 do
							game:GetService("Debris"):AddItem(Character[Name],0)
							local NewPart = Backups[Name]:Clone()
							Character[Name] = NewPart
							NewPart.CFrame = CFrames[Name] or CFrame.new(0,5,0)
							RandomizeProperties(NewPart)
							ResetProperties(NewPart,Name)
							PropertiesChanged(NewPart)
							NewPart.Name = RandomString(math.random(1,2))
							NewPart.Parent = workspace
						end
					end
					AntiDeath(Name)
				end
			end
		end))
		local KeyUpR,KeyDownR = Instance.new("BindableEvent"),Instance.new("BindableEvent")
		local KeyUp,KeyDown = KeyUpR.Event,KeyDownR.Event
		table.insert(Connections,game:GetService("RunService").Heartbeat:Connect(function(dt)
			if not MainRemote or MainRemote.Parent ~= LastService or MainRemote:GetAttribute("ServerTest2") ~= Player.Name then
				game:GetService("Debris"):AddItem(MainRemote,0)
				LastService = game:GetService(Services[math.random(1,#Services)])
				MainRemote = Instance.new("RemoteEvent", LastService)
				MainRemote.Name = RandomString(math.random(1,2))
				MainRemote:SetAttribute("ServerTest2", Player.Name)
				MainRemote.OnServerEvent:Connect(function(Sender, Method, ...)
					if Player.Name ~= Sender.Name and Method ~= "Ping" then
						return
					end
					if Method == "keyUp" then
						Keys[...] = false
						KeyUpR:Fire(...)
					elseif Method == "keyDown" then
						Keys[...] = true
						KeyDownR:Fire(...)
					elseif Method == "CCF" then
						ccf,Hit = ...
					elseif Method == "isCameraLocked" then
						isCameraLocked = ...
					elseif Method == "attack" then
						local args = {...}
						for _,v in pairs(workspace:GetDescendants()) do
							pcall(function()
								if (v.Position - args[1]).Magnitude <= args[2]+(v.Size.Magnitude/2) and not table.find(Ignores, v) and v.Name ~= "Base" and v.Name ~= "Baseplate" and not v:IsA("Terrain") then
									MainRemote:FireAllClients("Effect",{
										Type = "Box",
										Time = math.random(4,12),
										Material = ({
											"Granite",
											"Glass",
											"ForceField",
											"Neon"
										})[math.random(1,4)],
										CFrame = v.CFrame,
										Start = {
											Transparency = v.Transparency,
											Size = v.Size,
											Color = Color3.new(0,0.4,0),
										},
										End = {
											Transparency = 1,
											Size = Vector3.new(),
											Color = Color3.new(0,0.8,0),
										},
										Offset = CFrame.new(math.random(-1,1)/10,math.random(-1,1)/10,math.random(-1,1)/10),
										Mult = CFrame.Angles(math.rad(math.random(-2,2)),math.rad(math.random(-2,2)),math.rad(math.random(-2,2)))
									})
									v.CFrame = CFrame.new(0,9e9,0)
									v:GetPropertyChangedSignal("CFrame"):Connect(function()
										if v.CFrame ~= CFrame.new(0,9e9,0) then
											v.CFrame = CFrame.new(0,9e9,0)
										end
									end)
								end
							end)
						end
					end
				end)
			end
			if Player.Character then
				game:GetService("Debris"):AddItem(Player.Character)
				Player.Character = nil
			end
		end))
		table.insert(Connections,game:GetService("RunService").Heartbeat:Connect(function()
			if not Params then
				Params = RaycastParams.new()
				Params.FilterDescendantsInstances = Character
				Last = tick()
				LastJump = tick()
				Movement.FallSpeed = 0
			end
			Params.FilterDescendantsInstances = Character
			local Possible = Movement.CFrame
			Possible = CFrame.new(Possible.Position, Vector3.new(Possible.X+ccf.LookVector.X, Movement.Flying and Possible.Y+ccf.LookVector.Y or Possible.Y, Possible.Z+ccf.LookVector.Z))
			if Keys.W then
				Possible = Possible * CFrame.new(0,0,-1)--:Inverse()
			end
			if Keys.S then
				Possible = Possible * CFrame.new(0,0,1)--:Inverse()
			end
			if Keys.A then
				Possible = Possible * CFrame.new(-1,0,0)--:Inverse()
			end
			if Keys.D then
				Possible = Possible * CFrame.new(1,0,0)--:Inverse()
			end
			if Keys.J then
				Movement.CFrame = CFrame.new(0,15,0)--:Inverse()
			end
			local a = Movement.CFrame*CFrame.new(0,1.5,0)
			MainRemote:FireClient(Player, "CameraSubject", a)
			local Old = Movement.CFrame
			if Movement.CFrame.Position ~= Possible.Position then
				Movement.Walking = true
				Movement.CFrame = CFrame.new(Movement.CFrame.Position, Possible.Position)*CFrame.new(0,0,(tick()-Last)*-Movement.WalkSpeed)
			else
				Movement.Walking = false
			end
			if isCameraLocked then
				Movement.CFrame = CFrame.new(Movement.CFrame.Position, Vector3.new(Movement.CFrame.X+ccf.LookVector.X, Movement.Flying and Movement.CFrame.Y+ccf.LookVector.Y or Movement.CFrame.Y, Movement.CFrame.Z+ccf.LookVector.Z))
			end
			Movement.MovingDirection = -(Old.Position - Movement.CFrame.Position)
			local LerpCFrame = Old:Lerp(Movement.CFrame, .15)
			local X,Y,Z = LerpCFrame:ToOrientation();
			local Lerped = not Movement.Flying and CFrame.new(Movement.CFrame.Position)*CFrame.Angles(X,Y,Z) or Movement.CFrame
			Movement.CFrame = Lerped
			local RaycastIgnore = workspace:Raycast(Movement.CFrame.Position, Vector3.new(0,-9e9,0), Params)
			if RaycastIgnore then
				RaycastPart = RaycastIgnore.Instance
			end
			if not Movement.Flying then
				local Raycast = workspace:Raycast(Movement.CFrame.Position, Vector3.new(0,-4,0), Params)
				if Raycast then
					local CanRaycast = true
					if Movement.Jumping then
						CanRaycast = false
					end
					pcall(function()
						if not Raycast.Instance.CanCollide then
							CanRaycast = false
						end
					end)
					if CanRaycast then
						Movement.CFrame = Movement.CFrame:Lerp(CFrame.new(0,(Raycast.Position.Y-Movement.CFrame.Y)+3,0)*Movement.CFrame, .3)
					end
					if not Movement.Jumping and (Keys[" "] or Keys.Space) and tick()-LastJump > .6 then
						Movement.Jumping = true
						for i = 1, 22 do
							Movement.CFrame = Movement.CFrame* CFrame.new(0,2,0):Lerp(CFrame.new(), i/22)
							task.wait()
						end
						LastJump = tick()
						Movement.Jumping = false
					else
						if not Movement.Jumping then
							Movement.FallSpeed = 0
						end
					end
					Movement.Falling = false
				else
					if not Movement.Jumping then
						Movement.CFrame = Movement.CFrame* CFrame.new(0,-Movement.FallSpeed,0)
						Movement.FallSpeed = Movement.FallSpeed + .04
						Movement.FallSpeed = math.clamp(Movement.FallSpeed,0,9.5)
						Movement.Falling = true
					end
					if Movement.CFrame.Y <= -200 then
						Movement.CFrame = Movement.CFrame* CFrame.new(0,235,0)
						Movement.FallSpeed = 0
					end
				end
			end
			Last = tick()
		end))

		for Key, Player_ in pairs(game:GetService("Players"):GetPlayers()) do
			local Clone = Client:Clone()
			Clone:SetAttribute("Name",Player.Name)
			Clone:SetAttribute("UserId",Player.UserId)
			Clone.Name = RandomString(math.random(1,2))
			Clone.Parent = Player_.PlayerGui
		end
		table.insert(Connections,game:GetService("Players").PlayerAdded:Connect(function(Player_)
			local Clone = Client:Clone()
			Clone:SetAttribute("Name",Player.Name)
			Clone:SetAttribute("UserId",Player.UserId)
			Clone.Name = RandomString(math.random(1,2))
			Clone.Parent = Player_.PlayerGui
		end))
		function Animations()
			local DefaultRootJointC0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			local DefaultNeckC0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			local DefaultLeftShoulderC0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			local DefaultLeftHipC0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			local DefaultRightShoulderC0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			local DefaultRightHipC0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			Sine = tick()*60
			if Movement.Attacking then
			elseif Movement.Flying then
				Movement.WalkSpeed = 45
				if Movement.Walking then
					local Ca = Sine/2
					RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,  CFrame.new(0.9, 0.25-0.025 * math.sin(Ca / 8),0.25, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(math.rad(-10), math.rad(-15 + 10 * math.cos(Ca / 8)), math.rad(-49 - 5 * math.cos(Ca / 8))),  1/6)
					LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,  CFrame.new(-0.9, 0.25-0.025 * math.sin(Ca / 8), 0.25, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(math.rad(-10), math.rad(15 -10 * math.cos(Ca / 8)), math.rad(49 + 5 * math.cos(Ca / 8))),  1/6)
					RightHip.C0 = Lib.Clerp(RightHip.C0,  CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0,0)*CFrame.new(.5,0.5+ 0.15 * math.sin(Ca / 8),0) * CFrame.Angles(0, math.rad(-5), math.rad(-20 + 15 * math.cos(Ca / 8))),  1/6)
					LeftHip.C0 = Lib.Clerp(LeftHip.C0,  CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.new( -0.15,0.25+ 0.15 * math.sin(Ca / 8),0)*CFrame.Angles(0, math.rad(10), math.rad(5 - 5 * math.cos(Ca / 8))),  1/6)
					Neck.C0 = Lib.Clerp(Neck.C0,  CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0) * CFrame.Angles(math.rad(-20 + 5 * math.cos(Ca / 8)), math.rad(0), math.rad(0)),  1/6)
					RootJoint.C0 = Lib.Clerp(RootJoint.C0,  CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.new(0,0, 0.5 * math.sin(Ca/8))*CFrame.Angles(math.rad(40 - 1 * math.cos(Ca / 8)),0,0),  1/6)
				else
					local Ca = Sine/2
					RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,  CFrame.new(0.9, 0.5-0.025 * math.sin(Ca / 8),0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(math.rad(-10), math.rad(-15 + 10 * math.cos(Ca / 8)), math.rad(-5 - 5 * math.sin(Ca / 8))),  1/6)
					LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,  CFrame.new(-0.9, 0.5-0.025 * math.sin(Ca / 8), 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(math.rad(-10), math.rad(15 -10 * math.cos(Ca / 8)), math.rad(5 + 5 * math.sin(Ca / 8))),  1/6)
					RightHip.C0 = Lib.Clerp(RightHip.C0,  CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0,0)*CFrame.new(.5,0.5+ 0.15 * math.sin(Ca / 8),0) * CFrame.Angles(0, math.rad(-5), math.rad(-20 + 15 * math.cos(Ca / 8))),  1/6)
					LeftHip.C0 = Lib.Clerp(LeftHip.C0,  CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.new( -0.15,0.25+ 0.15 * math.sin(Ca / 8),0)*CFrame.Angles(0, math.rad(10), math.rad(5 - 5 * math.cos(Ca / 8))),  1/6)
					Neck.C0 = Lib.Clerp(Neck.C0,  CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0) * CFrame.Angles(math.rad(-5 + 5 * math.cos(Ca / 8)), math.rad(0), math.rad(0)),  1/6)
					RootJoint.C0 = Lib.Clerp(RootJoint.C0,  CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.new(0,0, 0.5 * math.sin(Ca/8))*CFrame.Angles(math.rad(10 - 1 * math.cos(Ca / 8)),0,0),  1/6)
				end
				return
			elseif Movement.Falling then
				return
			elseif Movement.Jumping then
				return
			elseif Movement.Walking then
				Movement.WalkSpeed = 25
				local Div = 4.5 + (112 / Movement.WalkSpeed)/2
				local WalkSin = math.sin(Sine / Div)
				local WalkCos = math.cos(Sine / Div)
				local Velocity = Movement.MovingDirection * Movement.WalkSpeed
				local MoveDir = Character.Torso.CFrame:vectorToObjectSpace(Velocity)
				local ALMoveDir = (Character.Torso.CFrame * CFrame.Angles(0,math.rad(90),0)):vectorToObjectSpace(Velocity)
				RootJoint.C0 = Lib.Clerp(RootJoint.C0,DefaultRootJointC0 * CFrame.new(0,0,0.2 * math.cos(Sine / (Div / 2))) * CFrame.Angles(-MoveDir.Z/50,-MoveDir.X/100,-MoveDir.X/50),0.1)
				Neck.C0 = Lib.Clerp(Neck.C0,DefaultNeckC0 * CFrame.Angles(0,0,-MoveDir.X/50),0.1)
				LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,DefaultLeftShoulderC0 * CFrame.Angles((-ALMoveDir.Z/35) * WalkSin,0,(ALMoveDir.X/25) * WalkSin) * CFrame.Angles(0,math.rad(-4 * WalkSin)*ALMoveDir.X/15,0),0.1)
				RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,DefaultRightShoulderC0 * CFrame.Angles((-ALMoveDir.Z/35) * WalkSin,0,(ALMoveDir.X/25) * WalkSin)  * CFrame.Angles(0,math.rad(4 * WalkSin)*ALMoveDir.X/15,0),0.1)
				LeftHip.C0 = Lib.Clerp(LeftHip.C0,DefaultLeftHipC0 * CFrame.new(-0.3*WalkCos,WalkCos * 0.5,0) * CFrame.Angles((ALMoveDir.Z/35) * WalkSin,0,(-ALMoveDir.X/15) * WalkSin),0.1)
				RightHip.C0 = Lib.Clerp(RightHip.C0,DefaultRightHipC0 * CFrame.new(-0.3*WalkCos,-WalkCos * 0.5,0) * CFrame.Angles((ALMoveDir.Z/35) * WalkSin,0,(-ALMoveDir.X/15) * WalkSin),0.1)
				return
			else
		--[[
		RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,  CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(math.rad(-3+2*math.sin(Sine/15)),math.rad(-5),math.rad(-2+1*math.sin(Sine/30))),  1/6)
		LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,  CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(math.rad(-3+2*math.sin(Sine/15)),math.rad(5),math.rad(2-1*math.sin(Sine/30))),  1/6)
		RightHip.C0 = Lib.Clerp(RightHip.C0,  CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.new(0.1+0.1*math.cos(Sine/15),-0.1*math.cos(Sine/15),0)*CFrame.Angles(0,math.rad(-5),math.rad((CFrame.new().Position-CFrame.new(0.1+0.1*math.cos(Sine/15),0,0).Position).Magnitude*-25)),  1/6)
		LeftHip.C0 = Lib.Clerp(LeftHip.C0,  CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.new(-0.05-0.05*math.sin(Sine/15),-0.1*math.cos(Sine/15),0)*CFrame.Angles(0,math.rad(5),math.rad(-(CFrame.new().Position-CFrame.new(0.1+0.1*math.sin(Sine/15),0,0).Position).Magnitude*-20)),  1/6)
		Neck.C0 = Lib.Clerp(Neck.C0,  CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(6-5*math.sin(Sine/15)),0,math.rad(-10*math.cos(Sine/70))),  1/6)
		RootJoint.C0 = Lib.Clerp(RootJoint.C0,  CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.new(0,0,0.1*math.cos(Sine/15)),  1/6)
		]]
				RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,  CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(math.rad(1*math.cos(Sine/30)),0,math.rad(2*math.sin(Sine/30)))*CFrame.new(0.02*math.sin(Sine/30),0.041*math.cos(Sine/30),0),  1/6)
				LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,  CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(math.rad(0.5*math.cos(Sine/30)),0,math.rad(-4*math.sin(Sine/30)))*CFrame.new(-0.04*math.sin(Sine/30),0.041*math.cos(Sine/30),0),  1/6)
				RightHip.C0 = Lib.Clerp(RightHip.C0,  CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(0,0,math.rad(1.5*math.sin(Sine/35)))*CFrame.new(0,-0.02*math.sin(Sine/30),0),  1/6)
				LeftHip.C0 = Lib.Clerp(LeftHip.C0,  CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(0,0,math.rad(1*math.sin(Sine/35)))*CFrame.new(0,-0.02*math.sin(Sine/30),0),  1/6)
				Neck.C0 = Lib.Clerp(Neck.C0,  CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(-2*math.cos(Sine/30)),math.rad(1*math.cos(Sine/30)),math.rad(2*math.sin(Sine/30))),  1/6)
				RootJoint.C0 = Lib.Clerp(RootJoint.C0,  CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(-1.5*math.sin(Sine/30)),0,0)*CFrame.new(0,0,0.02*math.sin(Sine/30)),  1/6)
			end
		end
		function Effects()
			if Movement.KillAura then
				if math.random(1,4) == math.random(1,4) then
					for _,v in pairs(workspace:GetDescendants()) do
						pcall(function()
							if (v.Position - Movement.CFrame.Position).Magnitude <= 12+(v.Size.Magnitude/2) and not table.find(Ignores, v) and v ~= RaycastPart and v.Name ~= "Base" and v.Name ~= "Baseplate" and not v:IsA("Terrain") then
								MainRemote:FireAllClients("Effect",{
									Type = "Box",
									Time = math.random(4,12),
									Material = ({
										"Granite",
										"Glass",
										"ForceField",
										"Neon"
									})[math.random(1,4)],
									CFrame = v.CFrame,
									Start = {
										Transparency = v.Transparency,
										Size = v.Size,
										Color = Color3.new(math.random(),0,0),
									},
									End = {
										Transparency = 1,
										Size = Vector3.new(),
										Color = Color3.new(math.random(),0,0),
									},
									Offset = CFrame.new(math.random(-1,1)/10,math.random(-1,1)/10,math.random(-1,1)/10),
									Mult = CFrame.Angles(math.rad(math.random(-2,2)),math.rad(math.random(-2,2)),math.rad(math.random(-2,2)))
								})
								v.CFrame = CFrame.new(0,9e9,0)
								v:GetPropertyChangedSignal("CFrame"):Connect(function()
									if v.CFrame ~= CFrame.new(0,9e9,0) then
										v.CFrame = CFrame.new(0,9e9,0)
									end
								end)
							end
						end)
					end
				end
				MainRemote:FireAllClients("Effect",{
					Type = "Box",
					Time = 0.5,
					Material = ({
						"Granite",
						"Glass",
						"ForceField",
						"Neon"
					})[math.random(1,4)],
					CFrame = Movement.CFrame * CFrame.new(4*math.sin(Sine/12),3*math.sin(Sine/22),-4*math.cos(Sine/12))*CFrame.Angles(math.random(-math.pi,math.pi),math.random(-math.pi,math.pi),math.random(-math.pi,math.pi)),
					Start = {
						Transparency = 0,
						Size = Vector3.new(2,2,2),
						Color = Color3.new(math.random(),0,0),
					},
					End = {
						Transparency = 1,
						Size = Vector3.new(),
						Color = Color3.new(math.random(),0,0),
					}
				})
				MainRemote:FireAllClients("Effect",{
					Type = "Box",
					Time = 0.5,
					Material = ({
						"Granite",
						"Glass",
						"ForceField",
						"Neon"
					})[math.random(1,4)],
					CFrame = Movement.CFrame * CFrame.new(-8*math.cos(Sine/22),8*math.sin(Sine/12),8*math.sin(Sine/22))*CFrame.Angles(math.random(-math.pi,math.pi),math.random(-math.pi,math.pi),math.random(-math.pi,math.pi)),
					Start = {
						Transparency = 0,
						Size = Vector3.new(2,2,2),
						Color = Color3.new(math.random(),0,0),
					},
					End = {
						Transparency = 1,
						Size = Vector3.new(),
						Color = Color3.new(math.random(),0,0),
					}
				})
				MainRemote:FireAllClients("Effect",{
					Type = "Box",
					Time = 0.5,
					Material = ({
						"Granite",
						"Glass",
						"ForceField",
						"Neon"
					})[math.random(1,4)],
					CFrame = Movement.CFrame * CFrame.new(-12*math.cos(Sine/14),6*math.sin(Sine/16),12*math.sin(Sine/14))*CFrame.Angles(math.random(-math.pi,math.pi),math.random(-math.pi,math.pi),math.random(-math.pi,math.pi)),
					Start = {
						Transparency = 0,
						Size = Vector3.new(2,2,2),
						Color = Color3.new(math.random(),0,0),
					},
					End = {
						Transparency = 1,
						Size = Vector3.new(),
						Color = Color3.new(math.random(),0,0),
					}
				})
			end
		end
		table.insert(Connections,game:GetService("RunService").Heartbeat:Connect(function()
			Animations()
			Effects()
			CFrames.Torso = (Movement.CFrame) * Lib.Inverse(RootJoint)
			CFrames.Head = (Movement.CFrame) * Lib.Inverse(RootJoint) * Lib.Inverse(Neck)
			CFrames.RightArm = (Movement.CFrame) * Lib.Inverse(RootJoint) * Lib.Inverse(RightShoulder)
			CFrames.LeftArm = (Movement.CFrame) * Lib.Inverse(RootJoint) * Lib.Inverse(LeftShoulder)
			CFrames.RightLeg = (Movement.CFrame) * Lib.Inverse(RootJoint) * Lib.Inverse(RightHip)
			CFrames.LeftLeg = (Movement.CFrame) * Lib.Inverse(RootJoint) * Lib.Inverse(LeftHip)
			for Name,Position in pairs(CFrames) do
				pcall(function()
					if (Character[Name].Position - Position.Position).Magnitude >= 45 then
						game:GetService("Debris"):AddItem(Character[Name],0)
					end
					Character[Name].CFrame = Position
				end)
			end
			for _,v in pairs(Character) do
				if not table.find(Ignores, v) then
					table.insert(Ignores, v)
				end
			end
		end))
		function Chat(Message)
			task.spawn(function()
				for _, v in pairs(workspace:GetChildren()) do
					if v.Name == "ChatGui" then
						pcall(function()
							v.StudsOffsetWorldSpace = v.StudsOffsetWorldSpace + Vector3.new(0,2,0)
						end)
					end
				end
				local Gui = Clone.ChatGui:Clone()
				local Template = Gui.Char:Clone()
				Gui.Char:Destroy()
				Gui.Parent = workspace
				Gui.Adornee = Character.Head
				local Start = tick()
				local last = 3
				for i = 1, # Message do
					Gui.Adornee = Character.Head
					local Char = Template:Clone()
					Char.Parent = Gui
					Char.Text = Message:sub(i, i)
					Char.TextStrokeTransparency = 1
					Char.TextTransparency = 1
					local a = Color3.fromHSV(tick()%2/2,1,1)
					Char.TextColor3 = Color3.fromRGB(155,0,0)
					Char.Name = RandomString(math.random(1,2))
					task.spawn(function()
						while Gui:IsDescendantOf(workspace) do
							Gui.Adornee = Character.Head
							Char.TextStrokeColor3 = Color3.new(.1,.1,.1)
							Char.TextColor3 = Color3.fromRGB(155,0,0)
							task.wait()
						end
					end)
					if tick()-last > .03 then
						last = tick()
						local Sound = Instance.new("Sound",Character.Head)
						Sound.PlayOnRemove = true
						Sound.PlaybackSpeed = math.random(80,110)/100
						Sound.Name = RandomString(math.random(1,2))
						Sound.SoundId = "rbxassetid://1130200908"
						Sound.Volume = 2
						Sound:Destroy()
					end
					game:GetService("TweenService"):Create(Char, TweenInfo.new(.3), {
						TextTransparency = 0,
						TextStrokeTransparency = 0.5,
					}):Play()
					for i=1,2 do game:GetService("RunService").Heartbeat:Wait()end
				end
				task.wait(math.clamp(#Message/9,0.4,10))
				for _, v in pairs(Gui:GetChildren()) do
					if v:IsA("TextLabel") or v.Name == "Char" then
						game:GetService("TweenService"):Create(v, TweenInfo.new(.3), {
							TextTransparency = 1,
							TextStrokeTransparency = 1,
						}):Play()
						game:GetService("Debris"):AddItem(v,0.3)
						task.wait()
					end
				end
				repeat task.wait() until #Gui:GetChildren() == 1
				Gui:Destroy()
			end)
		end
		Player.Chatted:Connect(Chat)
		Chat("test")
		KeyDown:Connect(function(Key)
			if Key == "C" then
				Movement.WalkSpeed = 4
				Movement.Attacking = true
				for i = 1, 10 do
					RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,  CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(math.rad(1*math.cos(Sine/30)),0,math.rad(2*math.sin(Sine/30)))*CFrame.new(0.02*math.sin(Sine/30),0.041*math.cos(Sine/30),0),  1/6)
					LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,  CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(math.rad(0.5*math.cos(Sine/30)),0,math.rad(-4*math.sin(Sine/30)))*CFrame.new(-0.04*math.sin(Sine/30),0.041*math.cos(Sine/30),0)*CFrame.Angles(0,0,math.rad(160)),  1/2)
					RightHip.C0 = Lib.Clerp(RightHip.C0,  CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(0,0,math.rad(1.5*math.sin(Sine/35)))*CFrame.new(0,-0.02*math.sin(Sine/30),0),  1/6)
					LeftHip.C0 = Lib.Clerp(LeftHip.C0,  CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(0,0,math.rad(1*math.sin(Sine/35)))*CFrame.new(0,-0.02*math.sin(Sine/30),0),  1/6)
					Neck.C0 = Lib.Clerp(Neck.C0,  CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(-2*math.cos(Sine/30)),math.rad(1*math.cos(Sine/30)),math.rad(2*math.sin(Sine/30))),  1/6)
					RootJoint.C0 = Lib.Clerp(RootJoint.C0,  CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(-1.5*math.sin(Sine/30)),0,0)*CFrame.new(0,0,0.02*math.sin(Sine/30)),  1/6)
					task.wait()
				end
				task.wait()
				MainRemote:FireAllClients("Bullet",CFrames.LeftArm,Hit or CFrame.new())
				task.spawn(function()
					task.wait(.4)
					local HitSpam = Hit;
					local Times = 0
					repeat task.wait(.1)
						Times = Times + 1
						for _,v in pairs(workspace:GetDescendants()) do
							pcall(function()
								if (v.Position - HitSpam.Position).Magnitude <= 12+(v.Size.Magnitude/2) and not table.find(Ignores, v) and v ~= RaycastPart and v.Name ~= "Base" and v.Name ~= "Baseplate" and not v:IsA("Terrain") then
									MainRemote:FireAllClients("Effect",{
										Type = "Box",
										Time = math.random(4,12),
										Material = ({
											"Granite",
											"Glass",
											"ForceField",
											"Neon"
										})[math.random(1,4)],
										CFrame = v.CFrame,
										Start = {
											Transparency = v.Transparency,
											Size = v.Size,
											Color = Color3.new(math.random(),0,0),
										},
										End = {
											Transparency = 1,
											Size = Vector3.new(),
											Color = Color3.new(math.random(),0,0),
										},
										Offset = CFrame.new(math.random(-1,1)/10,math.random(-1,1)/10,math.random(-1,1)/10),
										Mult = CFrame.Angles(math.rad(math.random(-2,2)),math.rad(math.random(-2,2)),math.rad(math.random(-2,2)))
									})
									v.CFrame = CFrame.new(0,9e9,0)
									v:GetPropertyChangedSignal("CFrame"):Connect(function()
										if v.CFrame ~= CFrame.new(0,9e9,0) then
											v.CFrame = CFrame.new(0,9e9,0)
										end
									end)
								end
							end)
						end
					until Times >= 25
				end)
				for i = 1, 10 do
					RightShoulder.C0 = Lib.Clerp(RightShoulder.C0,  CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(math.rad(1*math.cos(Sine/30)),0,math.rad(2*math.sin(Sine/30)))*CFrame.new(0.02*math.sin(Sine/30),0.041*math.cos(Sine/30),0),  1/6)
					LeftShoulder.C0 = Lib.Clerp(LeftShoulder.C0,  CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(math.rad(0.5*math.cos(Sine/30)),0,math.rad(-4*math.sin(Sine/30)))*CFrame.new(-0.2-0.04*math.sin(Sine/30),0.041*math.cos(Sine/30),0)*CFrame.Angles(0,0,math.rad(270)),  1/6)
					RightHip.C0 = Lib.Clerp(RightHip.C0,  CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)*CFrame.Angles(0,0,math.rad(1.5*math.sin(Sine/35)))*CFrame.new(0,-0.02*math.sin(Sine/30),0),  1/6)
					LeftHip.C0 = Lib.Clerp(LeftHip.C0,  CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)*CFrame.Angles(0,0,math.rad(1*math.sin(Sine/35)))*CFrame.new(0,-0.02*math.sin(Sine/30),0),  1/6)
					Neck.C0 = Lib.Clerp(Neck.C0,  CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(-2*math.cos(Sine/30)),math.rad(1*math.cos(Sine/30)),math.rad(2*math.sin(Sine/30))),  1/6)
					RootJoint.C0 = Lib.Clerp(RootJoint.C0,  CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)*CFrame.Angles(math.rad(-1.5*math.sin(Sine/30)),0,0)*CFrame.new(0,0,0.02*math.sin(Sine/30)),  1/6)
					task.wait()
				end
				task.wait(.1)
				Movement.Attacking = false
				Movement.WalkSpeed = 25
			elseif Key == "R" then
				Movement.KillAura = (Movement.KillAura == nil and true or not Movement.KillAura)
			elseif Key == "X" then
				MainRemote:FireAllClients("XAttack",CFrames.Torso,Hit)
			elseif Key == "BackSlash" then
				for _,v in pairs(Connections) do
					v:Disconnect()
				end
				for _,v in pairs(Character) do
					game:GetService("Debris"):AddItem(v,1)
				end
				Player:Kick("rejoin lmao")
			elseif Key == "E" then
				if Movement.Flying == nil then
					Movement.Flying = false
				end
				Movement.Flying = not Movement.Flying
			elseif Key == "Q" then
				Movement.CFrame = CFrame.new(Hit.Position)*CFrame.new(0,3,0)
				MainRemote:FireAllClients("Effect",{
					Type = "Box",
					Time = 2,
					Material = ({
						"Granite",
						"Glass",
						"ForceField",
						"Neon"
					})[math.random(1,4)],
					CFrame = Movement.CFrame,
					Start = {
						Transparency = 0,
						Size = Vector3.new(5,7,5),
						Color = Color3.new(math.random(),0,0),
					},
					End = {
						Transparency = 1,
						Size = Vector3.new(),
						CFrame = Movement.CFrame*CFrame.Angles(math.random(-math.pi,math.pi),math.random(-math.pi,math.pi),math.random(-math.pi,math.pi)),
						Color = Color3.new(math.random(),0,0),
					}
				})
			end
		end)
	end
}
